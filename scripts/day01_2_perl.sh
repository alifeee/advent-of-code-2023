#!/bin/bash

# cat $1 | awk 'BEGIN { map["zero"]=0; map["one"] = 1; map["two"]=2; map["three"]=3; map["four"]=4; map["five"]=5; map["six"]=6; map["seven"]=7; map["eight"]=8; map["nine"]=9 } match($0,/([0-9]|zero|one|two|three|four|five|six|seven|eight|nine)/) { n1 = substr($0, RSTART, RLENGTH) } match($0,/([0-9]|zero|one|two|three|four|five|six|seven|eight|nine)(?!.*([0-9]|zero|one|two|three|four|five|six|seven|eight|nine))/) { n2 = substr($0, RSTART, RLENGTH) } { print n2 }'

# cat $1 | perl -ne 'my %map = (zero=>0, one=>1, two=>2, three=>3, four=>4, five=>5, six=>6, seven=>7, eight=>8, nine=>9, 0=>0, 1=>1, 2=>2, 3=>3, 4=>4, 5=>5, 6=>6, 7=>7, 8=>8, 9=>9); print ; $_ =~ /([0-9]|zero|one|two|three|four|five|six|seven|eight|nine)/; $first = $1; $_ =~ /([0-9]|zero|one|two|three|four|five|six|seven|eight|nine)(?!.*([0-9]|zero|one|two|three|four|five|six|seven|eight|nine))/; $last = $1; $calib = "$map{$first}$map{$last}"; print $calib ;$sum += $calib; print "\n"; END {print $sum}'

# cat $1 | perl -ne 'my %map = (zero=>0, one=>1, two=>2, three=>3, four=>4, five=>5, six=>6, seven=>7, eight=>8, nine=>9, 0=>0, 1=>1, 2=>2, 3=>3, 4=>4, 5=>5, 6=>6, 7=>7, 8=>8, 9=>9); $line = $_; $_ =~ /([0-9]|zero|one|two|three|four|five|six|seven|eight|nine)/; $first = $1; while ($_ =~ /((?=[0-9]|zero|one|two|three|four|five|six|seven|eight|nine))/g) { $lastonwards = substr $line, pos $_ }; $lastonwards =~ /([0-9]|zero|one|two|three|four|five|six|seven|eight|nine)/; $last = $1; $calib = "$map{$first}$map{$last}";$sum += $calib; END {print $sum; print "\n"}'

cat $1 | perl -ne 'my $regex = "[0-9]|zero|one|two|three|four|five|six|seven|eight|nine"; my %map = (zero=>0, one=>1, two=>2, three=>3, four=>4, five=>5, six=>6, seven=>7, eight=>8, nine=>9, 0=>0, 1=>1, 2=>2, 3=>3, 4=>4, 5=>5, 6=>6, 7=>7, 8=>8, 9=>9); $line = $_; $_ =~ /(($regex))/; $first = $1; while ($_ =~ /((?=$regex))/g) { $lastonwards = substr $line, pos $_ }; $lastonwards =~ /(($regex))/; $last = $1; $calib = "$map{$first}$map{$last}"; $sum += $calib; END {print $sum; print "\n"}'
